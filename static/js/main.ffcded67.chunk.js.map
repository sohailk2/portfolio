{"version":3,"sources":["About.js","Experience.js","Projects.js","App.js","serviceWorker.js","index.js"],"names":["About","style","backgroundColor","flexBasis","this","props","internalPage","height","textAlign","color","marginTop","marginBottom","paddingLeft","paddingRight","width","mode","max","class","Container","Row","paddingBottom","Col","Card","borderWidth","Body","Title","Text","fontSize","React","Component","Experience","Projects","NoMatch","App","state","basename","Navbar","Toggle","aria-controls","Collapse","id","Nav","className","Link","href","margin","borderRadius","borderColor","overflow","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ffcded67.chunk.js","sourcesContent":["import React from 'react'\n\nimport { Card, Row, Col, Container } from 'react-bootstrap'\nimport { Textfit } from 'react-textfit';\n\n\nfunction Quote(props) {\n    return (<>&#8220;{props.content}&#8221;</>);\n}\n\nfunction Sample() {\n    return (<Card style={{ borderWidth: '5px', }}>\n\n\n        <Card.Body>\n            <Card.Title>Card Title</Card.Title>\n            <Card.Text style={{ fontSize: '150%' }}>\n                Some quick example text to build on the card title and make up the bulk of\n                the card's content.\n        </Card.Text>\n        </Card.Body>\n\n    </Card>)\n}\n\nclass About extends React.Component {\n\n    render() {\n        return (\n\n            <div style={{ backgroundColor: '#6DD3CE', flexBasis: this.props.internalPage.height }}>\n\n                <div style={{ textAlign: 'center', color: 'white', marginTop: '0px', marginBottom: '5px', paddingLeft: '5px', paddingRight: '5px', width: '100%' }}>\n                    <Textfit mode=\"single\" max=\"80\">\n                        {/* <Quote content=\"sohail khan\" /> */}\n                        sohail khan\n                        <span style={{ color: 'black' }}> - </span>\n                        <small class=\"text-muted\">sophomore</small>\n                        {/* ///over here who am i changes to my name: and the small is the adjectives that describe me? */}\n\n                    </Textfit>\n\n                </div>\n\n                {/* do something with the widths so that if screen is small cards just appear down in a line */}\n\n\n                {/* <Card className=\"w-25\" style={{ borderRadius: '0', borderWidth: '10px', width: '', left: '10%' }}>\n                    <Card.Body>\n                        <p>I go to the University of Illinois at Urbana-Champaign. </p>\n                        <p>I am currently pursing a Dual Degree:\n                            One in: Computer Science and another in Cogntive \n                        </p>\n                    </Card.Body>\n                </Card> */}\n\n                {/* <Card className=\"w-50\" style={{ borderRadius: '0', borderWidth: '10px', width: '', left: '20%' }}>\n                    <Card.Body>\n                        <h2>University of <span style={{ color: 'blue' }}>Illinois</span> @ <span style={{ color: 'orange' }}>Urbana-Champaign</span></h2>\n\n                        <Card className=\"w-75\" style={{ borderRadius: '0', borderWidth: '0px', width: '', left: '0%' }}>\n                            <Card.Body>\n                                <h2 style={{ fontSize: '200%' }}>Dual Degree:</h2>\n                                <h4>Computer Science</h4>\n                                <h4>Cognitive Psychology</h4>\n                            </Card.Body>\n                        </Card>\n                    </Card.Body>\n                </Card> */}\n\n                <Container>\n                    <Row style={{ paddingBottom: '0px' }}>\n                        <Col style={{ paddingBottom: '10px' }}>\n                            <Card style={{ borderWidth: '5px'}}>\n                                <Card.Body>\n                                    <Card.Title><b>University of <span style={{ color: 'blue' }}>Illinois</span> @ <span style={{ color: 'orange' }}>Urbana-Champaign</span></b></Card.Title>\n                                    <Card.Text style={{ fontSize: '120%' }}>\n                                        <div><b>Dual Degree:</b></div>\n                                        <div>- Computer Science</div>\n                                        <div>- Cognitive Psychology</div>\n                                </Card.Text>\n                                </Card.Body>\n\n                            </Card>\n\n                        </Col>\n                        <Col style={{ paddingBottom: '10px' }}>\n                        <Card style={{ borderWidth: '5px'}}>\n                                <Card.Body>\n                                    <Card.Title><b>Contact Me:</b></Card.Title>\n                                    <Card.Text style={{ fontSize: '120%' }}>\n                                        <div>LinkedIn</div>\n                                        <div>Github</div>\n                                        <div>Facebook</div>\n                                </Card.Text>\n                                </Card.Body>\n\n                            </Card>\n                        </Col>\n                        {/* <Col>\n                            <Sample />\n                        </Col> */}\n                    </Row>\n\n                    <Row style={{ paddingBottom: '10px' }}>\n                    <Col style={{ paddingBottom: '10px' }}>\n                        <Card style={{ borderWidth: '5px', }}>\n                                <Card.Body>\n                                    <Card.Title><b>A little more about me...</b></Card.Title>\n                                    <Card.Text style={{ fontSize: '120%' }}>\n                                        <div>\n                                            <p>\n                                                <p>\n                                                Hey ya'll. \n                                                My name is Sohail Khan. \n                                                I currently attend the University of Illinois @ Urbana-Champaign where \n                                                I study Computer Science and Cognitive Psychology. \n                                                </p>\n                                                \n                                                \n                                                <p>\n                                                I have experience developing web applications, building iot systems, working with voice assistants{/* web applications, building iot systems, bots */}, and love working on whatever strikes my interest. \n                                                At the moment, I am working on a chatbot that imitates ony of my friends, as well as working on an eye tracking project to control your computer.\n                                                </p>\n                                                \n                                                <p>\n                                                Currently, I am working as an Undergraduate Research Assistant in the Decision Neurscience Labratory, \n                                                where I write code to help perform extractions and analysis on MRI images.\n                                                </p>\n                                                 \n                                                <p>\n                                                    While your here, check out my projects and experience sections to get a better idea of the what I've worked on!\n                                                </p>\n                                            </p>\n                                        </div>\n                                </Card.Text>\n                                </Card.Body>\n\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n\n\n\n\n\n            </div>\n        )\n    }\n\n\n}\n\nexport default About","import React from 'react'\n\nclass Experience extends React.Component {\n\n    // maybe restructure this as a card area and just pass in some data from somewhere else?\n\n    render() {\n        return (\n            <div style={{height: this.props.internalPage.height, backgroundColor: '#C8E9A0'}}>\n                \"under construction...\"\n            </div>\n\n            // add a card about languages you've worked with\n            // where you've worked\n        )\n            \n    }\n}\n\nexport default Experience","import React from 'react'\n\nclass Projects extends React.Component {\n\n    // maybe restructure this as a card area and just pass in some data from somewhere else?\n\n    render() {\n        return (\n            <div style={{height: this.props.internalPage.height, backgroundColor: '#F7A278'}}>\n                \"under construction...\"\n            </div>\n\n            // add a card about languages you've worked with\n            // where you've worked\n        )\n            \n    }\n}\n\nexport default Projects","import React, { useState, useEffect } from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link,\n  // Redirect,\n  // useLocation\n} from \"react-router-dom\";\n\n\nimport { Card, Button, Tab, Tabs, Nav, Navbar } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// import logo from './logo.svg';\nimport './App.css';\nimport About from './About'\nimport Experience from './Experience'\nimport Projects from './Projects'\n\nfunction NoMatch() {\n  return (\"I can't seem to find this page!\")\n}\n\nclass App extends React.Component {\n\n\n\n\n  constructor() {\n    super()\n    this.state = {\n      // test: \"Yes\",\n      // currentTab: \"Home\",\n      internalPage: { height: '85vh' }\n    }\n  }\n\n  render() {\n    return (\n\n      <Router basename={'portfolio'}>\n\n        {/* change this back to routing so the pages don't reload? */}\n\n\n        {/* <Route path=\"/\" component={Game}>\n          <Route path=\"page1\" component={Game} />\n          <Route path=\"page2\" component={page2} />\n        </Route> */}\n\n        {/* \n          So pass the state down and edit the currenttab from down there? so that the current page is displayed right? \n          Ill set up the proper page routing later?\n        */}\n        {/* <Tabs>\n          <Tab style={{ backgroundColor: 'white' }} eventKey=\"game\" title=\"Play Game\">\n            <div>\n\n              <Game />\n            </div>\n          </Tab>\n          <Tab eventKey=\"data\" title=\"View EEG Data\">\n\n          </Tab>\n        </Tabs> */}\n        <Navbar style={{ backgroundColor: 'white', fontSize: '120%' }}>\n          {/* <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand> */}\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"/\">About Me</Nav.Link>\n              <Nav.Link href=\"experience\">Experience</Nav.Link>\n              <Nav.Link href=\"projects\">Projects</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n\n        <Card className=\"internalPadding\" style={{margin: '15px', height: this.state.internalPage.height, borderRadius: '0', borderWidth: '15px', borderColor: 'white', overflow: 'scroll' }}>\n\n          <Switch>\n            <Route exact path=\"/\">\n             \n                <About internalPage = {this.state.internalPage}/>\n\n              {/* so i want my name to drop in other things to pop in from left and right? */}\n            </Route>\n            <Route path=\"/experience\">\n\n                <Experience internalPage = {this.state.internalPage}/>\n            </Route>\n            <Route path=\"/projects\">\n                <Projects internalPage = {this.state.internalPage}/>\n            </Route>\n\n            <Route path=\"*\">\n              <NoMatch />\n            </Route>\n\n          </Switch>\n        </Card>\n\n\n      </Router>\n\n\n    )\n  }\n\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}